{"version":3,"sources":["webpack:///./src/components/post.js","webpack:///./src/components/posts.js","webpack:///./src/pages/blog.js"],"names":["Post","article","console","log","to","node","slug","className","fluid","image","childImageSharp","style","height","objectFit","category","name","title","content","format","publishedAt","Posts","allPosts","map","post","i","key","Blog","description","query","render","data","allStrapiArticle","edges"],"mappings":"yMAyBeA,EApBF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEd,OADAC,QAAQC,IAAIF,GAEV,kBAAC,OAAD,CAAMG,GAAE,SAAWH,EAAQI,KAAKC,MAC9B,yBAAKC,UAAU,aACX,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAKC,MAAOP,EAAQI,KAAKI,MAAMC,gBAAgBF,MAAOG,MAAO,CAAEC,OAAQ,OAAQC,UAAW,YAE9F,yBAAKN,UAAU,aACb,yBAAKA,UAAU,YAAf,IAA2B,8BAAON,EAAQI,KAAKS,SAASC,OACxD,yBAAKR,UAAU,cAAa,4BAAKN,EAAQI,KAAKW,QAC9C,yBAAKT,UAAU,UAAUN,EAAQI,KAAKY,SACtC,yBAAKV,UAAU,UAAf,kBACA,yBAAKA,UAAU,kBAAf,IAAiC,kBAAC,IAAD,CAAQW,OAAO,eAAejB,EAAQI,KAAKc,kBCHzEC,EAbD,SAAC,GAAiB,IACxBC,EADuB,EAAdpB,QAEf,OACG,yBAAKM,UAAU,cACZc,EAASC,KAAI,SAACC,EAAMC,GACpB,OACE,kBAAC,EAAD,CAAMvB,QAASsB,EAAME,IAAKF,EAAKlB,KAAKC,YCwD/BoB,UA1DF,WACX,OACG,kBAAC,IAAD,KACE,kBAAC,IAAD,CACKV,MAAM,OACNW,YAAY,4GAGhB,yBAAKpB,UAAU,QACX,wBAAIA,UAAU,SAAd,QACA,uBAAGA,UAAU,aAAb,4EACA,yBAAKA,UAAU,mBACT,4BACE,4BAAI,0BAAMA,UAAU,iBAAhB,QACJ,4BAAI,0BAAMA,UAAU,UAAhB,WACJ,4BAAI,0BAAMA,UAAU,UAAhB,UACJ,4BAAI,0BAAMA,UAAU,UAAhB,cACJ,4BAAI,0BAAMA,UAAU,UAAhB,YAGZ,yBAAKA,UAAU,cACf,kBAAC,cAAD,CACKqB,MAAK,YAyBRC,OAAQ,SAAAC,GAAI,OACR,kBAAC,EAAD,CAAO7B,QAAS6B,EAAKC,iBAAiBC","file":"component---src-pages-blog-js-b70f3e2a29e4bc053314.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Moment from 'react-moment';\nimport Img from \"gatsby-image\"\n\nconst Post = ({ article }) => {\n  console.log(article);\n  return (\n    <Link to={`/blog/${article.node.slug}`}>\n      <div className=\"blog-post\">\n          <div className=\"image\">\n              <Img fluid={article.node.image.childImageSharp.fluid} style={{ height: '100%', objectFit: 'cover',}}/>\n           </div>\n          <div className=\"blog-info\">\n            <div className=\"category\">#<span>{article.node.category.name}</span></div>\n            <div className=\"blog-title\"><h2>{article.node.title}</h2></div>\n            <div className=\"exerpt\">{article.node.content}</div>\n            <div className=\"author\">Luis Manzanero</div> \n            <div className=\"published-date\"> <Moment format=\"MMM Do YYYY\">{article.node.publishedAt}</Moment></div>\n          </div>\n      </div>  \n    </Link>\n  )\n}\n\nexport default Post;","import React from \"react\" \nimport Post from './post';\nconst Posts = ({ article }) => { \n  const allPosts = article;\n  return (\n     <div className=\"blog-posts\">\n      { allPosts.map((post, i) => { \n        return (\n          <Post article={post} key={post.node.slug}/>\n        );\n      })}\n     </div>\n  )\n}\n\nexport default Posts;","import React from 'react';  \nimport { StaticQuery, graphql } from \"gatsby\"\nimport SEO from \"../components/seo\"\nimport Layout from '../layouts/layout'; \nimport Posts from '../components/posts';\n\nconst Blog = () =>{\n  return (\n     <Layout>\n       <SEO \n            title=\"Blog\"\n            description=\"I also enjoy writing about the environment, life experiences, music, and colloborate with other coders!\"\n       \n        /> \n        <div className=\"page\">\n            <h1 className=\"title\">Blog</h1>\n            <p className=\"sub-title\">I also enjoy writing about the environment, life experiences, and music!</p>\n            <div className=\"page-categories\">\n                  <ul>\n                    <li><span className=\"option active\" >All</span></li>\n                    <li><span className=\"option\">Nature</span></li>\n                    <li><span className=\"option\">Story</span></li>\n                    <li><span className=\"option\">Adventure</span></li>\n                    <li><span className=\"option\">Music</span></li>   \n                  </ul>\n            </div>\n            <div className=\"blog-posts\">\n            <StaticQuery\n                 query={graphql`\n                    query { \n                    allStrapiArticle(filter: {status: {eq: \"published\"}}) {\n                    edges {\n                    node {\n                      strapiId\n                      slug\n                      title\n                      content\n                      publishedAt\n                      category {\n                        name\n                      }\n                      image {\n                        childImageSharp {\n                          fluid {\n                            ...GatsbyImageSharpFluid\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            `}\n              render={data => ( \n                  <Posts article={data.allStrapiArticle.edges}/>   \n              )}\n            />\n            </div>\n            {/* <button>Load More</button>  */}\n        </div>\n     </Layout>\n  );\n}\n\nexport default Blog;\n"],"sourceRoot":""}