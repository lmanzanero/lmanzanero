{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["IndexPage","title","className","src","alt","SEO","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"2FAAA,wDA8CeA,UAzCG,kBAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,sDAGX,yBAAKC,UAAU,QACb,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,cACb,yBAAKC,IAAI,yGAA0GC,IAAI,oBAEzH,yBAAKF,UAAU,aACb,wBAAIA,UAAU,gBAAd,0DACC,2BAAG,gCAAH,mLAA2L,mCAGlM,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,YACb,mCACA,2CAEF,yBAAKA,UAAU,YACb,mCACA,mDAEF,yBAAKA,UAAU,YACb,mCACA,uCAEF,yBAAKA,UAAU,YACb,mCACA,uCAGN,yBAAKA,UAAU,iCACX,2FACA,mD,kCCxCZ,0DAYA,SAASG,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMP,EAAS,EAATA,MAC9BQ,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFN,MAAOA,EACPa,cAAa,QAAUL,EAAKG,aAAaX,MACzCO,KAAM,CACJ,CACEO,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASf,GAEX,CACEgB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASf,GAEX,CACEc,KAAK,sBACLC,QAASL,IAEXQ,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-index-js-98de91277b2f4d66cb4f.js","sourcesContent":["import React from \"react\" \nimport Layout from \"../layouts/layout\" \nimport SEO from \"../components/seo\"\nimport '../layouts/layout' \n\nconst IndexPage = () => (\n  <Layout> \n      <SEO title=\"Environmental Scientist & Fullstack Web Developer\"/> \n      {/* <meta name=\"description\" content=\"I believe I'm one of the most versatile individuals that exists, and it has been been a personal goal of mine to be so; ultimatley, use every skill possible to safe our planet\" />\n           <meta name=\"keywords\" content=\"Envrionmental Scientist, Innovator, Software Developer\" /> */}\n      <div className=\"page\">\n        <div className=\"flex-container mobile\">\n            <div className=\"hero-image\">\n              <img src=\"https://avatars2.githubusercontent.com/u/20497361?s=400&u=fcce070b780d1229d7d97890113a85f00cf4a049&v=4\"  alt=\"Luis Manzanero\"/>\n            </div>\n            <div className=\"main-text\">\n              <h1 className=\"about-header\">Envrionmental Scientist, Innovator, Software Developer</h1>\n               <p><b>\"</b>I believe I'm one of the most versatile individuals that exists, and it has been been a personal goal of mine to be so; ultimatley, use every skill possible to save our planet.<b>\"</b></p> \n            </div>\n        </div>\n        <div className=\"flex-container\">\n            <div className=\"services\">\n              <i>Icon</i>\n              <h3>Web Design</h3>\n            </div>\n            <div className=\"services\">\n              <i>Icon</i>\n              <h3>Mobile Development</h3>\n            </div>\n            <div className=\"services\">\n              <i>Icon</i>\n              <h3>Videos</h3>\n            </div>\n            <div className=\"services\">\n              <i>Icon</i>\n              <h3>Music</h3>\n            </div>\n        </div>\n        <div className=\"flex-container about-projects\">\n            <p>I'd love to explore opportunities that can change the world!</p>\n            <button>Contact me</button>\n        </div>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}