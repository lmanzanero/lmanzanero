{"version":3,"sources":["webpack:///./src/services/repositories/api.js","webpack:///./src/pages/projects.js","webpack:///./src/services/hooks/useProjectsHook.js"],"names":["getAllProjects","url","setIsLoading","setError","setData","a","fetch","response","json","data","Projects","useState","isloading","status","error","useEffect","useGetProjects","console","log","onClickItem","e","document","querySelectorAll","forEach","option","classList","remove","target","add","title","description","className","onClick","map","project","key","id","alt","src","img_url","formats","medium","project_name","href","link","rel"],"mappings":"mMAAMA,EAAc,uCAAG,WAAOC,EAAKC,EAAcC,EAAUC,GAApC,iBAAAC,EAAA,sEACRH,GAAa,GADL,gCAGUI,MAAML,GAHhB,cAGPM,EAHO,gBAIMA,EAASC,OAJf,cAIPC,EAJO,iBAKPL,EAAQK,GALD,yBAMPP,GAAa,GANN,2EAQPC,EAAS,EAAD,IARD,yBASPD,GAAa,GATN,0DAAH,4DCwDLQ,UAlDE,WAAM,IAAD,ECHP,SAAyBT,GAAM,IAAD,EACjBU,mBAAS,IAA3BF,EADmC,KAC7BL,EAD6B,OAEPO,oBAAS,GAArCC,EAFmC,KAExBV,EAFwB,OAGbS,mBAAS,QAA/BE,EAHmC,aAIfF,mBAAS,KAA7BG,EAJmC,KAI5BX,EAJ4B,KAW3C,OALAY,qBAAU,WACHd,GACLD,EAAeC,EAAKC,EAAcC,EAAUC,KAC3C,CAACH,IAEG,CAAEQ,OAAMG,YAAWC,SAAQC,SDPSE,CAAe,6CAAlDP,EADY,EACZA,KAAMI,EADM,EACNA,OAAQD,EADF,EACEA,UAAWE,EADb,EACaA,MACjCG,QAAQC,IAAIT,EAAMI,EAAQD,EAAWE,GACrC,IAAMK,EAAc,SAACC,GACHC,SAASC,iBAAiB,WAClCC,SAAQ,SAAAC,GACdA,EAAOC,UAAUC,OAAO,aAE1BN,EAAEO,OAAOF,UAAUG,IAAI,WAGzB,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,MAAM,WACNC,YAAY,gGAEhB,yBAAKC,UAAU,QACb,wBAAIA,UAAU,SAAd,+BACA,uBAAGA,UAAU,aAAb,uFACA,yBAAKA,UAAU,mBACT,4BACE,4BAAI,0BAAMA,UAAU,gBAAgBC,QAASb,GAAzC,QACJ,4BAAI,0BAAMY,UAAU,SAASC,QAASb,GAAlC,YACJ,4BAAI,0BAAMY,UAAU,SAASC,QAASb,GAAlC,eACJ,4BAAI,0BAAMY,UAAU,SAASC,QAASb,GAAlC,WACJ,4BAAI,0BAAMY,UAAU,SAASC,QAASb,GAAlC,YAGZ,yBAAKY,UAAU,iBAEZnB,EAAY,aAAeH,EAAKwB,KAAI,SAAAC,GAAO,OACxC,yBAAKC,IAAKD,EAAQE,GAAIL,UAAU,gBAC5B,yBAAKM,IAAI,GAAGC,IAAKJ,EAAQK,QAAQC,QAAQC,OAAOxC,MAChD,yBAAK8B,UAAU,iBACd,yBAAKA,UAAU,iBAAiBG,EAAQQ,cAEvC,yBAAKX,UAAU,SACb,uBAAGY,KAAMT,EAAQU,KAAMjB,OAAO,SAASkB,IAAI,cAA3C","file":"component---src-pages-projects-js-1b2a62b671a0851ac573.js","sourcesContent":["const getAllProjects = async (url, setIsLoading, setError, setData) => {\n         await setIsLoading(true);\n        try {\n          const response = await fetch(url);\n          const data = await response.json(); \n          await setData(data); \n          await setIsLoading(false);\n        } catch (error) {\n          await setError(error);\n          await setIsLoading(false)\n        }  \n}\n\nconst getAllPosts = async () => {\n  return await fetch('https://lmanzanero.herokuapp.com/projects')\n  .then(response => response.json())\n  .then(json => console.log(json));\n}\n\nexport { getAllPosts, getAllProjects }","import React, { useState, useEffect }from 'react';  \nimport SEO from \"../components/seo\"\nimport Layout from '../layouts/layout';  \nimport useGetProjects from '../services/hooks/useProjectsHook';\n\n\nconst Projects = () =>{ \n  const { data, status, isloading, error } = useGetProjects('https://lmanzanero.herokuapp.com/projects');\n  console.log(data, status, isloading, error); \n  const onClickItem = (e) => { \n    const options = document.querySelectorAll('.option'); \n    options.forEach(option => { \n      option.classList.remove('active');\n    });\n    e.target.classList.add('active');\n  }\n\n  return (\n    <Layout>\n        <SEO \n            title=\"Projects\"\n            description=\"Here is a collection of many projects that I have worked on, contributed, or built for fun!\"\n        /> \n        <div className=\"page\">\n          <h1 className=\"title\">Cool Projects I have built!</h1>\n          <p className=\"sub-title\">I enjoy being artistic with web design, mobile development, music, and videography!</p>\n          <div className=\"page-categories\">\n                <ul>\n                  <li><span className=\"option active\" onClick={onClickItem}>All</span></li>\n                  <li><span className=\"option\" onClick={onClickItem}>Web Dev</span></li>\n                  <li><span className=\"option\" onClick={onClickItem}>Mobile Dev</span></li>\n                  <li><span className=\"option\" onClick={onClickItem}>Videos</span></li>\n                  <li><span className=\"option\" onClick={onClickItem}>Music</span></li>   \n                </ul>\n          </div>\n          <div className=\"project-items\">\n            {\n             isloading ? 'loading...' : data.map(project => ( \n                <div key={project.id} className=\"project-item\">\n                    <img alt=\"\" src={project.img_url.formats.medium.url}/>\n                    <div className=\"project-inner\">\n                     <div className=\"project-title\">{project.project_name}</div>\n                      {/* <div className=\"category\">Web Design</div> */}\n                      <div className=\"links\">\n                        <a href={project.link} target=\"_blank\" rel=\"noreferrer\">Live Link</a>\n                      </div>\n                    </div>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n    </Layout>\n  );\n}\n\nexport default Projects;\n","import { useState, useEffect } from 'react'\nimport { getAllProjects } from '../repositories/api';\n\nexport default function useGetProjects (url) {\n  const [ data, setData ] = useState([]);\n  const [ isloading, setIsLoading ] = useState(false);\n  const [ status, setStatus ] = useState('idle');\n  const [ error, setError ] = useState('');\n\n  useEffect(() => {\n    if (!url) return;  \n    getAllProjects(url, setIsLoading, setError, setData); \n  }, [url]);\n\n  return { data, isloading, status, error };\n}\n"],"sourceRoot":""}